{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\senai\\\\3DN\\\\Projeto_Pineapple\\\\frontend\\\\projeto-final\\\\src\\\\componentes\\\\RouteGuard\\\\index.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouteGuard = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  function hasJWT() {\n    let flag = false;\n\n    //check user has JWT token\n    var usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    usuario.token ? flag = true : flag = false;\n    return flag;\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => hasJWT() ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 8\n  }, this);\n};\n_c = RouteGuard;\nexport default RouteGuard;\nvar _c;\n$RefreshReg$(_c, \"RouteGuard\");","map":{"version":3,"names":["React","Route","Redirect","RouteGuard","component","Component","rest","hasJWT","flag","usuario","JSON","parse","localStorage","getItem","token","props","pathname"],"sources":["C:/Projetos/senai/3DN/Projeto_Pineapple/frontend/projeto-final/src/componentes/RouteGuard/index.js"],"sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n \nconst RouteGuard = ({ component: Component, ...rest }) => {\n \n   function hasJWT() {\n       let flag = false;\n \n       //check user has JWT token\n       var usuario =  JSON.parse(localStorage.getItem(\"usuario\"));\n       usuario.token ? flag=true : flag=false\n      \n       return flag\n   }\n \n   return (\n       <Route {...rest}\n           render={props => (\n               hasJWT() ?\n                   <Component {...props} />\n                   :\n                   <Redirect to={{ pathname: '/login' }} />\n           )}\n       />\n   );\n};\n \nexport default RouteGuard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAEnD,MAAMC,UAAU,GAAG,QAAuC;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC;EAElD,SAASC,MAAM,GAAG;IACd,IAAIC,IAAI,GAAG,KAAK;;IAEhB;IACA,IAAIC,OAAO,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC1DJ,OAAO,CAACK,KAAK,GAAGN,IAAI,GAAC,IAAI,GAAGA,IAAI,GAAC,KAAK;IAEtC,OAAOA,IAAI;EACf;EAEA,oBACI,QAAC,KAAK;IAAA,GAAKF,IAAI;IACX,MAAM,EAAES,KAAK,IACTR,MAAM,EAAE,gBACJ,QAAC,SAAS;MAAA,GAAKQ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI,gBAExB,QAAC,QAAQ;MAAC,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA;EAC3C;IAAA;IAAA;IAAA;EAAA,QACJ;AAET,CAAC;AAAC,KAtBIb,UAAU;AAwBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}